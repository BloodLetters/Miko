name: Build and Release Android APK

on:
  push:
    tags:
      - 'v*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: Build React
        run: CI=false npm run build

      - name: Add Android platform
        run: npx cap add android

      - name: Sync Capacitor
        run: npx cap sync android

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build APK
        run: |
          cd android
          ./gradlew build

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: android/app/build/outputs/apk/debug/app-debug.apk

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get previous tag
        id: prev-tag
        run: |
          prev_tag=$(git describe --tags --abbrev=0 HEAD^1 || echo "")
          echo "previous_tag=$prev_tag" >> $GITHUB_ENV
      
      - name: Generate changelog
        id: changelog
        run: |
          if [ -z "$prev_tag" ]; then
            echo "No previous tag found. Generating changelog for the current tag only."
            notes=$(git log HEAD^1..HEAD --pretty=format:"%h - %s (%an, %ad)" --date=short)
          else
            echo "Generating changelog from $prev_tag to ${GITHUB_REF#refs/tags/}"
            notes=$(git log $prev_tag..${GITHUB_REF#refs/tags/} --pretty=format:"%h - %s (%an, %ad)" --date=short)
          fi
          echo "changelog=$notes" >> $GITHUB_ENV

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }} Release
          body: ${{ env.changelog }}
          draft: false
          prerelease: false

      - name: Rename APK
        run: mv android/app/build/outputs/apk/debug/app-debug.apk android/app/build/outputs/apk/debug/Miko.apk

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: android/app/build/outputs/apk/debug/Miko.apk
          asset_name: Miko.apk
          asset_content_type: application/vnd.android.package-archive
