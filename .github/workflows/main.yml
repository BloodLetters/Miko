name: Build and Release Android APK

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Extract Tag Name from Commit Message
        id: extract_tag
        run: |
          TAG_NAME=$(git log -1 --pretty=%B | grep -oE 'v[0-9]+\.[0-9]+\.[0-9]+')
          if [[ -z "$TAG_NAME" ]]; then
            echo "No version tag found in commit message."
            exit 1
          fi
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "Release tag: $TAG_NAME"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: Build React
        run: CI=false npm run build

      - name: Add Android platform
        run: npx cap add android

      - name: Sync Capacitor
        run: npx cap sync android

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build APK
        run: |
          cd android
          ./gradlew build

      - name: Rename APK
        run: mv android/app/build/outputs/apk/debug/app-debug.apk android/app/build/outputs/apk/debug/Miko.apk

      - name: Create GitHub Release (If Not Exists)
        id: create_release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              const { data: existingRelease } = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: process.env.TAG_NAME
              });
              console.log(`Release already exists: ${existingRelease.html_url}`);
              core.setOutput("upload_url", existingRelease.upload_url);
            } catch (error) {
              console.log("Release not found. Creating a new release...");
              const { data: newRelease } = await github.rest.repos.createRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag_name: process.env.TAG_NAME,
                name: `Release ${process.env.TAG_NAME}`,
                body: "New version released!",
                draft: false,
                prerelease: false
              });
              console.log(`Created release: ${newRelease.html_url}`);
              core.setOutput("upload_url", newRelease.upload_url);
            }

      - name: Upload Source Code to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}.zip
          asset_name: source-code-${{ env.TAG_NAME }}.zip
          asset_content_type: application/zip

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: android/app/build/outputs/apk/debug/Miko.apk
          asset_name: Miko.apk
          asset_content_type: application/vnd.android.package-archive
